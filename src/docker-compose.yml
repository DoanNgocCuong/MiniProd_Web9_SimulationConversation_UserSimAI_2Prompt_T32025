version: '3.8'

services:
  backend:
    build:
      context: ./backend
    image: backend-web-simulation-conv-doanngoccuong:latest
    ports:
      - "25050:25050"
    restart: unless-stopped
    container_name: websim-backend
    environment:
      - CORS_ORIGINS=http://localhost:25051,http://frontend:80,http://103.253.20.13:25051,http://103.253.20.13:9404
      - DOCKER=true
      - ENVIRONMENT=production
      - API_BASE_URL=http://103.253.20.13:9404
      - PYTHONUNBUFFERED=1
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    volumes:
      - websim_logs:/app/logs
      - ./backend/.env:/app/.env
    networks:
      - web-simulation-network
    command: >
      bash -c "echo '=== CONTAINER STARTED AT $$(date) ===' > /app/logs/startup.log &&
               echo 'Environment: DOCKER=$${DOCKER}, API_BASE_URL=$${API_BASE_URL}' >> /app/logs/startup.log &&
               uvicorn main:app --host 0.0.0.0 --port 25050"
    deploy:
      resources:
        limits:
          memory: 2G  # Giới hạn 2GB RAM
        reservations:
          memory: 512M  # Đảm bảo ít nhất 512MB RAM

  frontend:
    build:
      context: ./frontend
    image: frontend-web-simulation-conv-doanngoccuong:latest
    ports:
      - "25051:80"
    restart: unless-stopped
    container_name: websim-frontend
    depends_on:
      - backend
    environment:
      - VITE_BACKEND_URL=http://103.253.20.13:25050
    networks:
      - web-simulation-network

volumes:
  websim_logs:

networks:
  web-simulation-network:
    name: web-simulation-conv-doanngoccuong
    driver: bridge



# version: '2'

# services:
#   websim-backend:
#     build: ./backend
#     ports:
#       - "25049:25050"
#     volumes:
#       - ./backend:/app
#     environment:
#       - OPENAI_API_KEY=${OPENAI_API_KEY}
#     restart: always

#   websim-frontend:
#     image: nginx:alpine
#     ports:
#       - "79:80"
#     volumes:
#       - ./frontend:/usr/share/nginx/html
#       - ./nginx.conf:/etc/nginx/conf.d/default.conf
#     depends_on:
#       - websim-backend
#     restart: always

#   prometheus:
#     image: prom/prometheus
#     ports:
#       - "9089:9090"
#     volumes:
#       - ./prometheus.yml:/etc/prometheus/prometheus.yml
#     restart: always

#   grafana:
#     image: grafana/grafana
#     ports:
#       - "2999:3000"
#     environment:
#       - GF_SECURITY_ADMIN_USER=admin
#       - GF_SECURITY_ADMIN_PASSWORD=admin
#     volumes:
#       - grafana-data:/var/lib/grafana
#     depends_on:
#       - prometheus
#     restart: always

# volumes:
#   grafana-data: 